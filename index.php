<?php
////...................................................

/*
echo 'Front Controller ....'.date('l jS \of F Y h:i:s A').'<br>';
echo 'your request:'.$_SERVER['REQUEST_URI'];
echo "<br>...................<br>";
*/
// ////.....................регулярные выражения..............
/*
// Format: dd-mm-yyyy
$string = '21-11-2015'; // день-месяц-год
// Год 2015, месяц 11, день 21
$pattern = '/([0-9]{2})-([0-9]{2})-([0-9]{4})/';
$replacement = 'Год $3,месяц $2,день $1'; // $1 - первая подмаска([0-9]{2}) ,2я - ([0-9]{2}), 3я - ([0-9]{4})
echo preg_replace($pattern, $replacement, $string );
*/
/*
 preg_replace — Выполняет поиск и замену по регулярному выражению.
 Выполняет поиск совпадений в строке string с шаблоном pattern и заменяет их на replacement
*/
 /*
echo "<br>";
// Month: 11, Day: 21, Year: 2015
$replacement1 = 'Month: $2, Day: $1, Year: $3';
echo preg_replace($pattern, $replacement1, $string );
echo "<br>...................<br>";
*/
////////////////////////////////////////////////////////
/*
$string = 'Ученик сидит за партой';

$pattern = '/Ученик/';
$result = preg_match($pattern,$string); // 1 если найдено и 0 если нет,false в случае ошибки
var_dump($result);  // int(1)
echo "<br>...................<br>";
////////////////////////////////////////////////////////
///

$string = 'Ученик закончил школу в 2000 году.Стал студентом в 2002.';

// $pattern = '/2000/';
// $pattern = '/200[0-5]/'; // [] задает диапазон поиска для одного символа
//$pattern = '/200[1,5,8]/'; // [] задает диапазон поиска для 1го символа (или 1,или 5, или 8)
// 2001  2005  2008 
// 
// Поиск от 0000 - 9999
 // $pattern = '/[0-9][0-9][0-9][0-9]/'; 
 
//квантификаторы - помогаут описать повторяющиеся символы в строке
$string = 'Apples and oranges ppp';

$pattern = '/p{2}/';// '/p/'  '/pp/'   {2} - квантификатор,указ.что мы ищем на 2 или (группа)
// символов которые находятся перед ним (в данном сл. 'p' ) 
// p{3,5} от 3 до 5 симв. подряд
// p{1,} от 1 и более
$string = 'Apples and oranges ppp 222';

$pattern = '/[0-9]{1,2}/';// ищет цифры сост. из от 1 до 2 знаков
// [0-9]+   ищем любое кол-во цифр больше одной    98797239893
// 
$result = preg_match($pattern,$string); // 1 если найдено и 0 если нет,false в случае ошибки
var_dump($result);  // int(1)
echo "<br>...................<br>";
*/

///// http://php.net/manual/ru/regexp.reference.repetition.php ///////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////

// FRONT CONTROLLER  // все запросы попадают в этот файл (см.  .htaccess)

// 1. Общие настройки

ini_set('display_errors',1);
error_reporting(E_ALL);   // отображение ошибок на время разработки сайта ,потом выкл.

session_start();
// 2. Подключение файлов системы
define('ROOT', dirname(__FILE__));  //  dirname(__FILE__) - полный путь к файлу на диске
                                 // при помощи ф-ции dirname() и псевдоконстанты __FILE__
     // echo ROOT."<br>";  //  /var/www/html/mvc
// require_once(ROOT.'/components/Router.php');
// require_once(ROOT.'/components/Db.php');
require_once(ROOT.'/components/Autoload.php');

// 3. Установка соединения с БД



// 4. Вызов Router

$router = new Router();
$router -> run();














